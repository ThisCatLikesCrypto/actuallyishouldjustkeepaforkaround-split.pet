---
import "@fontsource-variable/inter";
import "../style/index.scss";
import {
    siAstro,
    siGithub,
    siCloudflarepages
} from "simple-icons"

const { title, description, meta } = Astro.props

interface Props {
    title: string,
    description: string,
    meta?: {name: string, content: string}[]
}
---
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml">
        <title>{title}</title>

        <meta name="title" content={title}>
        <meta name="description" content={description}>
        <meta name="theme-color" content="#FB405A">
        {
            meta?.map(e => <meta name={e.name} content={e.content}>)
        }
    </head>
    <body>

        <div id="background" aria-hidden>
            <video aria-hidden autoplay muted loop playsinline disablepictureinpicture src="/lagtrain.webm" style="filter:brightness(80%);background-color: #B2B2B2;" class="hide_when_reduced_motion hide_when_high_contrast" />
        </div>

        <div id="all">

            <slot />

            <footer>
                <h3><a href="/">split.pet</a> &mdash; {title}</a></h3>
                <p>
                    <a href="/domainlist">Domain list</a><br>
                    <a href="/blog">Blog</a><br>
                    Built with 
                    <a href="https://astro.build" style={"color:#"+siAstro.hex}>
                        <Fragment set:html={siAstro.svg} />&thinsp;Astro</a>
                    on
                    <a href="https://github.com/nbitzz/newnewwebsite">
                        <Fragment set:html={siGithub.svg} />&thinsp;GitHub</a>
                    and hosted with
                    <a href="https://pages.cloudflare.com/" style={"color:#"+siCloudflarepages.hex}>
                        <Fragment set:html={siCloudflarepages.svg} />&thinsp;Cloudflare Pages</a>
                </p>
            </footer>
            
        </div>
    </body>

    <script lang="js">
        // simple script to keep state persistent
        // i mean i could probably do something stupid
        // like a cookie with pages functions or some shit
        // but not now go fuck yourself

        /**
         * @type HTMLInputElement
         */
        let btn = document.getElementsByClassName("extendPost")[0];
        if (btn && btn.disabled !== undefined) {
            btn.checked = localStorage.getItem("pagesExtended") == 'yes'

            btn.addEventListener("change", () => {
                localStorage.setItem("pagesExtended", btn.checked ? "yes" : "no")
            })
        }
    </script>
</html>