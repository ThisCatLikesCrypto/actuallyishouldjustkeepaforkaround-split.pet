---
import "@fontsource-variable/inter";
import "../style/index.scss";
import {
    siAstro,
    siGithub,
    siCloudflarepages
} from "simple-icons"

const { title, description, meta } = Astro.props

interface Props {
    title: string,
    description: string,
    meta?: {name: string, content: string}[]
}
---
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" type="image/png" href="/favicon.png">
        <link rel="icon" type="image/vnd.microsoft.icon" href="/favicon.ico">
        <link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml">
        <title>{title}</title>

        <meta name="title" content={title}>
        <meta name="description" content={description}>
        <meta name="theme-color" content="#FB405A">
        {
            meta?.map(e => <meta name={e.name} content={e.content}>)
        }
    </head>
    <body>

        <div id="background" aria-hidden="true">
            <video aria-hidden="true" autoplay muted loop playsinline disablepictureinpicture="true" src="/laundry.webm" class="hide_when_reduced_motion hide_when_high_contrast" />
        </div>
        
        <div id="all_container">
            <div id="all">

                <slot />

                <footer>
                    <h3>
                        <a href="/">split.pet</a>
                        <a href="/docs" class="subroute">/docs</a>
                        <a href="/blog" class="subroute">/blog</a>
                        <br>
                        {title}
                    </h3>
                    <p>
                        Built with 
                        <a href="https://astro.build" style={"color:#"+siAstro.hex}>
                            <Fragment set:html={siAstro.svg} />&thinsp;Astro</a>
                        on
                        <a href="https://github.com/nbitzz/split.pet">
                            <Fragment set:html={siGithub.svg} />&thinsp;GitHub</a>
                        and hosted with
                        <a href="https://pages.cloudflare.com/" style={"color:#"+siCloudflarepages.hex}>
                            <Fragment set:html={siCloudflarepages.svg} />&thinsp;Cloudflare Pages</a>
                    </p>
                </footer>
                
            </div>
        </div>
    </body>

    <script lang="js">
        // simple script to keep state persistent
        // i mean i could probably do something stupid
        // like a cookie with pages functions or some shit
        // but not now go fuck yourself

        /**
         * @type HTMLInputElement
         */
        let btn = document.getElementsByClassName("extendPost")[0];
        if (btn && btn.disabled !== undefined) {
            btn.checked = localStorage.getItem("pagesExtended") == 'yes'

            btn.addEventListener("change", () => {
                localStorage.setItem("pagesExtended", btn.checked ? "yes" : "no")
            })
        }
    </script>
</html>