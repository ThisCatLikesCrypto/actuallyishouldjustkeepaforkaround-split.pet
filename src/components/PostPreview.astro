---
import { Picture } from "astro:assets"
import { type Props as PostProps } from "../layouts/Post.astro"
import dynImportImg from "../util/ohgodpleasehelpme"

export interface Props {
    post: {
        url: string,
        frontmatter: PostProps["frontmatter"]
    }
}

const { post } = Astro.props

---
<style lang="scss">
    a:has(> .post) {
        all: unset;
        cursor: pointer;
        position: relative;
    }

    * {
        margin: 0 !important; // !important here to stop mdx stuf
    }

    p, small {
        color: #bbb;
        font-style: oblique;
    }

    p:has(small) {
        text-align: right;
    }

    .post {
        --hoverThickness {}
        border-radius: 16px;
        padding: 10px 15px;
        background-color: var(--backgroundColor);
        outline: 1px solid transparent;

        overflow: hidden;
        
        transition-duration: 250ms;
        transition-property: border-left border-right;
        position: relative;

        & img {
            transition-duration: 250ms;
            transition-property: filter, transform;
            position: absolute;
            border-radius: 16px;
            width: 100%;
            height: 100%;
            object-fit: cover;
            background-color: var(--backgroundColor);
            filter: opacity(20%) saturate(25%);
            z-index: 0;

            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(150%) rotate(-12.5deg);

            @media (prefers-reduced-motion) {
                display: none;
            }

            &.topper {
                object-fit: fill;
                filter: blur(30px) opacity(40%);
                transform: translate(-50%, -50%) scale(150%);
                aspect-ratio: 1 / 1;
                height: auto;
            }
        }
        /*
        &:has(.topper) {
            display: flex;
            gap: 15px;
        }*/
    }
    /*
    .topper {
        flex: 0 0 80px;
        height: auto;
        min-width: 0;
        object-fit: contain;
    }*/

    .frontmatter {
        z-index: 1;
        position: relative;
    }

    a:hover > .post, a:focus-visible > .post {
        outline: 1px solid #66aaff;
        & img:not(.topper) {
            filter: opacity(45%) saturate(75%);
            transform: translate(-50%, -50%) scale(125%) rotate(-5deg);
        }/*
        & > .topper {
            transform: scale(110%);
        }*/
        & > .topper {
            filter: blur(50px) opacity(60%);
        }
    }
    
    a:active > .post {
        outline: 1px solid #66aaff99;
        & img:not(.topper) {
            filter: opacity(55%) saturate(100%);
            transform: translate(-50%, -50%) scale(100%) rotate(0deg);
        }
        & > .topper {
            filter: blur(40px) opacity(50%);
        }
    }

    a:focus-visible > .post {
        outline: 3px solid #ccc;
    }

    @media (prefers-reduced-motion) {
        .post img {
            transform: translate(-50%, -50%) scale(100%) !important;
        }
    }
</style>
<a href={post.url}>
    <div class="post">

        {
            post.frontmatter.image
            ? (
                "path" in post.frontmatter.image
                ? <Picture
                    src={dynImportImg(post.frontmatter.image.path)}
                    alt={post.frontmatter.image.alt}
                    class:list={[{topper: post.frontmatter.image.isTopper}]}
                    formats={["avif", "webp"]}
                />
                : <img
                    src={post.frontmatter.image.url}
                    alt={post.frontmatter.image.alt}
                    class:list={[{topper: post.frontmatter.image.isTopper}]}
                >
            )
            : ""
        }

        <div class="frontmatter">
            <h3>{post.frontmatter.title}</h3>
            <p>
                {post.frontmatter.description}
            </p>
            {
                post.frontmatter.publicationDate
                ? <p>
                    <small>{new Date(post.frontmatter.publicationDate).toISOString().split("T")[0]}</small>
                </p>
                : ""
            }
        </div>

    </div>
</a>