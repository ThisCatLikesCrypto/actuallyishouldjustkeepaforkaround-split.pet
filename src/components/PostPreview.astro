---
import { type Props as PostProps } from "../layouts/Post.astro"

export interface Props {
    post: {
        url: string,
        frontmatter: PostProps["frontmatter"]
    }
}

const { post } = Astro.props
---
<style lang="scss">
    a:has(> .post) {
        all: unset;
        cursor: pointer;
        position: relative;
    }

    * {
        margin: 0;
    }

    p, small {
        color: #bbb;
        font-style: oblique;
    }

    p:has(small) {
        text-align: right;
    }

    .post {
        --hoverThickness {}
        border-radius: 16px;
        padding: 10px 15px;
        background-color: var(--backgroundColor);
        border: 1px solid transparent;

        overflow: hidden;
        
        transition-duration: 250ms;
        transition-property: border-left border-right;
        position: relative;

        & > img {
            position: absolute;
            border-radius: 16px;
            width: 100%;
            height: 100%;
            object-fit: cover;
            background-color: var(--backgroundColor);
            filter: opacity(20%) saturate(25%);
            z-index: 0;
            transition-duration: 250ms;
            transition-property: filter, transform;

            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(150%) rotate(-12.5deg);

            @media (prefers-reduced-motion) {
                display: none;
            }
        }
    }

    .post:has(> img) {
        background: var(--backgroundColor);
    }


    .frontmatter {
        z-index: 1;
        position: relative;
    }

    a:hover > .post, a:focus-visible > .post {
        border: 1px solid #66aaff;
        & > img {
            filter: opacity(45%) saturate(75%);
            transform: translate(-50%, -50%) scale(125%) rotate(-5deg);
        }
    }
    
    a:active > .post {
        border: 1px solid #66aaff99;
        & > img {
            filter: opacity(55%) saturate(100%);
            transform: translate(-50%, -50%) scale(100%) rotate(0deg);
        }
    }

    a:focus-visible > .post {
        outline: 3px solid #ccc;
    }

    @media (prefers-reduced-motion) {
        .post > img {
            transform: translate(-50%, -50%) scale(100%) !important;
        }
    }
</style>
<a href={post.url}>
    <div class="post">

        {
            post.frontmatter.image && !post.frontmatter.image.isTopper
            ? <img src={post.frontmatter.image.url} alt={post.frontmatter.image.alt}>
            : ""
        }

        <div class="frontmatter">
            <h3>{post.frontmatter.title}</h3>
            <p>
                {post.frontmatter.description}
            </p>
            {
                post.frontmatter.publicationDate
                ? <p>
                    <small>{new Date(post.frontmatter.publicationDate).toISOString().split("T")[0]}</small>
                </p>
                : ""
            }
        </div>

    </div>
</a>