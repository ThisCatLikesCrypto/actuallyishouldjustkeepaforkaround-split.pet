---
import {
    siGit,
    siAstro,
    siBun,
    siNodedotjs,
    siSvelte
} from "simple-icons"
import server from "@fluentui/svg-icons/icons/live_24_filled.svg?raw"
import website from "@fluentui/svg-icons/icons/window_24_filled.svg?raw"
import launch from "@fluentui/svg-icons/icons/open_24_filled.svg?raw"
import { injectTitleIntoSvg } from "../util/ohgodpleasehelpme"
const availButtons = {
    git: {
        icon: siGit.svg,
        defaultTitle: "Source"
    },
    instance: {
        icon: injectTitleIntoSvg(server, "Instance"),
        defaultTitle: "Live instance"
    },
    website: {
        icon: injectTitleIntoSvg(website, "Website"),
        defaultTitle: "Site"
    },
    launch: {
        icon: injectTitleIntoSvg(launch, "Launch"),
        defaultTitle: "Go"
    }
} satisfies Record<string, {icon: string, defaultTitle: string}>
const availTech = {
    astro: {
        icon: siAstro.svg,
        name: "Astro",
        href: "https://astro.build/"
    },
    bun: {
        icon: siBun.svg,
        name: "Bun",
        href: "https://bun.sh"
    },
    node: {
        icon: siNodedotjs.svg,
        name: "Node.js",
        href: "https://nodejs.org"
    },
    svelte: {
        icon: siSvelte.svg,
        name: "Svelte",
        href: "https://svelte.dev"
    }
} satisfies Record<string, Tech>

export interface Chip {
    icon: keyof typeof availButtons,
    href: string,
    title?: string,
    sub?: string
}

export interface Tech {icon: string, name: string, href: string}

export type TechResolvable = keyof typeof availTech

export interface Props {
    name: string
    tech: TechResolvable[]
    chips: Chip[]
}

const { name, chips, tech } = Astro.props

const resolvedTech = tech.map(e => typeof e == "string" ? availTech[e] : e) as Tech[]
---
<style lang="scss">
    .project {
    > .head {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 5px;
        > hgroup {
            > * {
                margin: 0;
            }
        }
        > .chips {
            display: flex;
            justify-content: right;
            flex-grow: 1;
            flex-wrap: wrap;
            align-items: center;
            gap: 5px;
            > a {
                display: flex;
                gap: 5px;
                font-size: medium;
                align-items: center;
                padding: 3px 6px;
                border: 1px solid gray;
                border-radius: 8px;
                text-decoration: none;
                white-space: nowrap;
                > .chipIconContainer {
                    display: flex;
                    aspect-ratio: 1 / 1;
                    height: 1em;
                    width: 1em;
                }
            }
        }
    }
}
</style>
<style is:global>
    .chipIconContainer > svg {
        width: 100%;
        height: 100%;
    }
</style>
<div class="project">
  <div class="head">
    <hgroup>
        <h2>{name}</h2>   
        <p class="tech">
            {
                resolvedTech.map(
                    technology =>
                        <a href={technology.href} target="_blank"><Fragment set:html={technology.icon} /></a>
                ).flatMap((v,i,a) => a.length-1 == i ? v : [ v, <>&thinsp;</> ])
            }
            {
                resolvedTech.map(
                    technology => 
                        <a href={technology.href} target="_blank">{technology.name}</a>
                ).flatMap((v,i,a) => a.length-1 == i ? v : [ v, ", " ])
            }
        </p>
    </hgroup>
    <div class="chips">
        {
            chips.map(
                chip =>
                    <a href={chip.href} target="_blank">
                        <div class="chipIconContainer">
                            <Fragment set:html={availButtons[chip.icon].icon} />
                        </div>
                        <span>{chip.title || availButtons[chip.icon].defaultTitle}</span>
                    </a>
            )
        }
    </div>
  </div>
  <slot />
</div>